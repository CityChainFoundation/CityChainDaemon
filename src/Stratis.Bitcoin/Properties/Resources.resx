<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="AsciiLogo" xml:space="preserve">
    <value>

  .d8888b.  d8b 888                   .d8888b.  888               d8b          
 d88P  Y88b Y8P 888                  d88P  Y88b 888               Y8P          
 888    888     888                  888    888 888                            
 888        888 888888 888  888      888        88888b.   8888b.  888 88888b.  
 888        888 888    888  888      888        888 "88b     "88b 888 888 "88b 
 888    888 888 888    888  888      888    888 888  888 .d888888 888 888  888 
 Y88b  d88P 888 Y88b.  Y88b 888      Y88b  d88P 888  888 888  888 888 888  888 
  "Y8888P"  888  "Y888  "Y88888       "Y8888P"  888  888 "Y888888 888 888  888 
                            888                                                
                       Y8b d88P                                                
                        "Y88P"                                                 

MMMMMMMMMMMMMMMMMMMMMMMMWWNXXK00OOOOkkkkkkkkOOOO00KKXNWWMMMMMMMMMMMMMMMMMMMMMMMM
MMMMMMMMMMMMMMMMMMMMWNXK0OOkkkkkkkkkkkkkkkkkkkkkkkkkkkO0KXNWMMMMMMMMMMMMMMMMMMMM
MMMMMMMMMMMMMMMMMWXK0OkkkkkkkkkkkkkkkOOOOOOOOkkkkkkkkkkkkkO0KXWMMMMMMMMMMMMMMMMM
MMMMMMMMMMMMMMWNKOkkkkkkkkkkkkkkkkkkl;;;;;;;lkkkkkkkkkkkkkkkkkOKXWMMMMMMMMMMMMMM
MMMMMMMMMMMMWX0OkkkkkkkkkkkkkkOOkkxd,       'dkkOOOkkkkkkkkkkkkkk0XNMMMMMMMMMMMM
MMMMMMMMMMWKOkkkkkkkkkkkkOOxoc:,'...         ...,:coxkOkkkkkkkkkkkkOKNMMMMMMMMMM
MMMMMMMMWXOkkkkkkkkkkkOko:,.                        .':okOkkkkkkkkkkkOKWMMMMMMMM
MMMMMMWN0kkkkkkkkkkOko:.          ;ddooooooodx:         .;okOkkkkkkkkkk0XWMMMMMM
MMMMMWKOkkkkkkkkkOkl'           ..oOc.......:Od.           'cxOkkkkkkkkkOKWMMMMM
MMMMN0kkkkkkkkkOkl.         .;codddl'       .oxxol;.         .ckOkkkkkkkkk0NMMMM
MMMN0kkkkkkkkkOd'        .:dxdc;..            ..,cdxd:.        .okkkkkkkkkk0NMMM
MMN0kkkkkkkkOkc.       'lkx:.                      .:dko'        :kOkkkkkkkk0NMM
MWKkkkkkkkkOk;       .lkd,.                           ,dko.       ,xOkkkkkkkk0WM
WKkkkkkkkkOk;       ,xk:.        .':clloollc:,.         ;xk;       ,xOkkkkkkkkKW
N0kkkkkkkOk:       :Od'       .;oxOOOkkkkkkOOOxo;.       .oOc       ;kOkkkkkkkON
KkkkkkkkkOo.      ;Od.       ;xOkkkkkkkkkkkkkkkkOx:.      .oOc.......oOkkkkkkkkK
0kkkkkkkOk,      .xk'      .lOkkkkkkkkkkkkkkkkkkkkOo.      'dOkxxxxxxxkkkkkkkkk0
OkkkkkkkOd.      cOc      .lOkkkkkkkkkkkkkkkkkkkkkkkxoooooodxkkkkkkkkkkkkkkkkkkO
kkkkkkkkOl.     .dk'      ,kOkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk
kkkkkkkkOc      .xx.      cOkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk
kkkkkkkkOc      .xk'      :kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk
OkkkkkkkOo.     .oO;      .xOkkkkkkkkkkkkkkkkkkkkkkkkOOOOOOOkkkkkkkkkkkkkkkkkkkO
OkkkkkkkOx'      ;Oo.      ;kOkkkkkkkkkkkkkkkkkkkkkkl;;;;;;:dOOOOOkOOkkkkkkkkkkO
0kkkkkkkkO:      .oO:       ,xOkkkkkkkkkkkkkkkkkkOx;       ,kxcccccccdkkkkkkkkk0
XOkkkkkkkOx'      .dO;       .:xOOkkkkkkkkkkkkOOxc.       ,kx'      .dOkkkkkkkkX
W0kkkkkkkkOo.      .dOc.       .,coxkkOOOOkkxdl,.        :kd.      .lOkkkkkkkk0N
MXOkkkkkkkkOl.      .ckd,          ..',,,,'..          'dkl.      .cOkkkkkkkkOXM
MWXOkkkkkkkkOo.       'okd,.                        .,okd'       .lOkkkkkkkkOXWM
MMWXOkkkkkkkkOx,        'lxxl,.                  .'cxkl'        'dOkkkkkkkkOKWMM
MMMWXOkkkkkkkkOkl.        .,ldxoc:'.        .,;coxxl;.        .ckOkkkkkkkkOKWMMM
MMMMWXOkkkkkkkkkOxc.         ..;ckk,       ,kkoc;..         .:xOkkkkkkkkkOXWMMMM
MMMMMMN0kkkkkkkkkkOxl,.         .lOdcccccccd0l            'cxOkkkkkkkkkk0NMMMMMM
MMMMMMMWXOkkkkkkkkkkOkdc'.       ';;;;;;;;;;;.        .':dkOkkkkkkkkkkOXWMMMMMMM
MMMMMMMMMNKOkkkkkkkkkkkOkxl:,..                  ..':lxkOkkkkkkkkkkkOKNMMMMMMMMM
MMMMMMMMMMMNKOkkkkkkkkkkkkkOkkdocc;.       .,;:cldkkOkkkkkkkkkkkkkOKNWMMMMMMMMMM
MMMMMMMMMMMMMWX0OkkkkkkkkkkkkkkkkOk;      .:OOOkkkkkkkkkkkkkkkkO0XWWMMMMMMMMMMMM
MMMMMMMMMMMMMMMWNK0OkkkkkkkkkkkkkkkxdddddddxkkkkkkkkkkkkkkkkO0KNWMMMMMMMMMMMMMMM
MMMMMMMMMMMMMMMMMMWNXK0OkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkO0KXNWMMMMMMMMMMMMMMMMMM
MMMMMMMMMMMMMMMMMMMMMMWNXK00OOkkkkkkkkkkkkkkkkkkkkOO00KXNWMMMMMMMMMMMMMMMMMMMMMM
MMMMMMMMMMMMMMMMMMMMMMMMMMMWNXKK0OOOkkkkkkkkOOO00KXNWMMMMMMMMMMMMMMMMMMMMMMMMMMM


</value>
  </data>
</root>