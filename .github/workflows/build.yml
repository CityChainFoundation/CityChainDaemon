name: Build

on: 
  push:
    branches:
      - feature/*

jobs:
  
  buildAndUnitTest:

    strategy:
      matrix:
        os: [ windows-latest, ubuntu-latest, macos-latest ]
        node_version: [12.x]
      fail-fast: false

    runs-on: ${{ matrix.os }}
    
    env:
      SOLUTION_PATH: 'src/City.Chain.sln'
      BUILD_CONFIGURATION: 'Release'

    steps:

    - uses: actions/checkout@v1

    - name: Set Node.js version ${{ matrix.node_version }}
      uses: actions/setup-node@v1
      with:
        node-version: ${{ matrix.node_version }}

    - name: Set Version
      id: setversion
      run: |
        echo ::set-env name=VERSION1::$(npm run version)
        echo ::set-output name=VERSION2::$(npm run version)

    - name: Get Version 1
      run: |
        echo "$MYVERSION"
      env:
        MYVERSION: ${{ steps.setversion.outputs.VERSION2 }}

    - name: Get Version 2
      run: |
        echo "$MYVERSION2"
      env:
        MYVERSION2: ${{ env.VERSION1 }}

    - name: Setup .NET Core
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: '2.1.607' 

    - name: Restore
      run: dotnet restore ${{env.SOLUTION_PATH}}
      
    - name: Build
      run: dotnet build --configuration ${{env.BUILD_CONFIGURATION}} ${{env.SOLUTION_PATH}}
      
#    - name: Unit Test
#      run: dotnet test -v=normal --no-build --filter FullyQualifiedName!~IntegrationTests --configuration ${{env.BUILD_CONFIGURATION}} ${{env.SOLUTION_PATH}}

    - uses: "marvinpinto/action-automatic-releases@latest"
      name: "Release"
      with:
        repo_token: "${{ secrets.GITHUB_TOKEN }}"
        automatic_release_tag: "latest"
        prerelease: true
        title: "Development Build"
        files: |
          LICENSE
          package.json